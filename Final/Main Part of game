from turtle import Screen  # allows for import of image to screen##
import pygame  # enables visuals##
from fighter import Fighter  # brings in fighters ferom fighter file##

pygame.init()  # creates an instances of pygame##

##Creates Game Window Size##
SCREEN_WIDTH = 1000
SCREEN_Height = 800

##Screen Title & Display##
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_Height))
pygame.display.set_caption("Brawler")

##Framerate Setting##
clock = pygame.time.Clock()
FPS = 60  # FramesPerSecond##

#Define Colors#
RED = (255, 0, 0)
YELLOW = (255, 255, 0)
WHITE = (255, 255, 255)

# Will be used to define size of fighters #
WARRIOR_SIZE = 162  # Number based off size of image#
WARRIOR_SCALE = 4  # scales the size of the fighter#
WARRIOR_OFFSET = [72, 56]
WARRIOR_DATA = [WARRIOR_SIZE, WARRIOR_SCALE, WARRIOR_OFFSET]
WIZARD_SIZE = 250
WIZARD_SCALE = 3
WIZARD_OFFSET = [112, 107]
WIZARD_DATA = [WIZARD_SIZE, WIZARD_SCALE, WIZARD_OFFSET]

##Background Image load in and \\ to prevent error when pulling in iamge##
bg_image = pygame.image.load(
    "C:\\Users\\17737\\Desktop\\Python\\Game_Project\\brawler\\assets\\images\\backgrounds\\background.jpg").convert_alpha()

#Spritesheets load#
warrior_sheet = pygame.image.load(
    "C:\\Users\\17737\\Desktop\\Python\\Game_Project\\brawler\\assets\\images\\warrior\\Sprites\\warrior.png").convert_alpha()
wizard_sheet = pygame.image.load(
    "C:\\Users\\17737\\Desktop\\Python\\Game_Project\\brawler\\assets\\images\\wizard\\Sprites\\wizard.png").convert_alpha()

#Fighters animation defined into a list istead of pulling each image separtely#
WARRIOR_ANIMATION_STEPS = [10, 8, 1, 7, 7, 3, 7]
WIZARD_ANIMATION_STEPS = [8, 8, 1, 8, 8, 3, 7]

##Background Drawing Function##


def draw_bg():
    ## Resize Iamge to fit window size##
    scaled_bg = pygame.transform.scale(bg_image, (SCREEN_WIDTH, SCREEN_Height))
    screen.blit(scaled_bg, (0, 0))

#Health Bars for fighters Function#


def draw_health_bar(health, x, y):
    ratio = health / 100  # Dynamic health #
    pygame.draw.rect(screen, WHITE, (x - 5, y-5, 410, 40)
                     )  # Health Bar Outline#
    pygame.draw.rect(screen, RED, (x, y, 400, 30))
    pygame.draw.rect(screen, YELLOW, (x, y, 400 * ratio, 30)
                     )  # Dynamic Health Bar#


## Creates Fighters ##
fighter_1 = Fighter(200, 550, WARRIOR_DATA, warrior_sheet,
                    WARRIOR_ANIMATION_STEPS)
fighter_2 = Fighter(700, 550, WIZARD_DATA, wizard_sheet,
                    WIZARD_ANIMATION_STEPS)

##game loop that keep screen from closing##
run = True
while run:

    ##Calling In FPS##
    clock.tick(FPS)

    ##Background Drawing##
    draw_bg()

    #Health Bars Diplay#
    draw_health_bar(fighter_1.health, 20, 20)
    draw_health_bar(fighter_2.health, 580, 20)

    ##Fighters Movements##
    # Calls in Move Function##
    fighter_1.move(SCREEN_WIDTH, SCREEN_Height, screen, fighter_2)
    # fighter_2.move()

    ## drawing of fighters passing them into surface##
    fighter_1.draw(screen)
    fighter_2.draw(screen)

    # event handler
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    # update display
    pygame.display.update()

# Exit Pygame
pygame.quit()
